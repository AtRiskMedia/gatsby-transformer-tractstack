{"version":3,"sources":["src/gatsby-node.js"],"names":["require","tagExtractor","processMarkdown","DrupalNodes","exports","onCreateNode","node","createNodeId","createContentDigest","actions","internal","owner","includes","type","createNode","createNodeField","createParentChildLink","content","field_markdown_body","images","relationships","field_image___NODE","Object","entries","key","value","console","log","markdownNode","id","parent","children","mediaType","frontmatter","title","field_alt_description","rawMarkdownBody","contentDigest","child"],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;AACA,eAA0CA,OAAO,aAAjD;AAAA,IAAQC,YAAR,YAAQA,YAAR;AAAA,IAAsBC,eAAtB,YAAsBA,eAAtB;;AACA,IAAMC,WAAW,GAAG,CAClB,qBADkB,EAElB,uBAFkB,EAGlB,kBAHkB,EAIlB,eAJkB,EAKlB,gBALkB,CAApB;;AAQAC,OAAO,CAACC,YAAR,GAAuB,gBAKjB;AAAA,MAJJC,IAII,QAJJA,IAII;AAAA,MAHJC,YAGI,QAHJA,YAGI;AAAA,MAFJC,mBAEI,QAFJA,mBAEI;AAAA,MADJC,OACI,QADJA,OACI;;AACJ,MACEH,IAAI,CAACI,QAAL,CAAcC,KAAd,KAAwB,sBAAxB,IACA,CAACR,WAAW,CAACS,QAAZ,CAAqBN,IAAI,CAACI,QAAL,CAAcG,IAAnC,CAFH,EAGE;AACA,WAAO,EAAP;AACD;;AACD,MAAQC,UAAR,GAA+DL,OAA/D,CAAQK,UAAR;AAAA,MAAoBC,eAApB,GAA+DN,OAA/D,CAAoBM,eAApB;AAAA,MAAqCC,qBAArC,GAA+DP,OAA/D,CAAqCO,qBAArC;AACA,MAAIC,OAAO,GAAGX,IAAI,CAACY,mBAAnB;AACA,MAAIC,MAAM,GAAGb,IAAI,CAACc,aAAL,CAAmBC,kBAAhC;;AACA,qCAA2BC,MAAM,CAACC,OAAP,CAAeJ,MAAf,CAA3B,qCAAmD;AAA9C;AAAA,QAAOK,GAAP;AAAA,QAAYC,KAAZ;;AACHC,IAAAA,OAAO,CAACC,GAAR,WAAeH,GAAf,eAAuBC,KAAvB;AACD,GAZG,CAaJ;AAEA;AACA;AACA;;;AACA,MAAMG,YAAY,GAAG;AACnBC,IAAAA,EAAE,EAAEtB,YAAY,WAAID,IAAI,CAACuB,EAAT,qBADG;AAEnBC,IAAAA,MAAM,EAAExB,IAAI,CAACuB,EAFM;AAGnBE,IAAAA,QAAQ,EAAE,EAHS;AAInBrB,IAAAA,QAAQ,EAAE;AACRG,MAAAA,IAAI,gBADI;AAERmB,MAAAA,SAAS,iBAFD;AAGRf,MAAAA,OAAO,EAAEA;AAHD;AAJS,GAArB;AAUAW,EAAAA,YAAY,CAACK,WAAb,GAA2B;AACzBC,IAAAA,KAAK,EAAE5B,IAAI,CAAC6B;AADa,GAA3B;AAGAP,EAAAA,YAAY,CAACQ,eAAb,GAA+BnB,OAA/B;AACAW,EAAAA,YAAY,CAAClB,QAAb,CAAsB2B,aAAtB,GAAsC7B,mBAAmB,CAACoB,YAAD,CAAzD;AACAd,EAAAA,UAAU,CAACc,YAAD,CAAV;AACAZ,EAAAA,qBAAqB,CAAC;AAAEc,IAAAA,MAAM,EAAExB,IAAV;AAAgBgC,IAAAA,KAAK,EAAEV;AAAvB,GAAD,CAArB,CAlCI,CAmCJ;;AACA;AACF;AACA;AACA;AACA;;AACE,SAAOA,YAAP;AACD,CA/CD","sourcesContent":["import * as React from \"react\";\nconst { tagExtractor, processMarkdown } = require(`./helpers`);\nconst DrupalNodes = [\n  \"paragraph__markdown\",\n  \"paragraph__background\",\n  \"paragraph__video\",\n  \"paragraph__d3\",\n  \"paragraph__h5p\",\n];\n\nexports.onCreateNode = ({\n  node,\n  createNodeId,\n  createContentDigest,\n  actions,\n}) => {\n  if (\n    node.internal.owner !== \"gatsby-source-drupal\" ||\n    !DrupalNodes.includes(node.internal.type)\n  ) {\n    return {};\n  }\n  const { createNode, createNodeField, createParentChildLink } = actions;\n  let content = node.field_markdown_body;\n  let images = node.relationships.field_image___NODE;\n  for (const [key, value] of Object.entries(images)) {\n    console.log(`${key}: ${value}`);\n  }\n  // process images\n\n  // todo:\n  // preprocess raw markdown and inject tractstack goodies\n  //\n  const markdownNode = {\n    id: createNodeId(`${node.id} MarkdownRemark`),\n    parent: node.id,\n    children: [],\n    internal: {\n      type: `PaneFragment`,\n      mediaType: `text/markdown`,\n      content: content,\n    },\n  };\n  markdownNode.frontmatter = {\n    title: node.field_alt_description,\n  };\n  markdownNode.rawMarkdownBody = content;\n  markdownNode.internal.contentDigest = createContentDigest(markdownNode);\n  createNode(markdownNode);\n  createParentChildLink({ parent: node, child: markdownNode });\n  //console.log(node, markdownNode);\n  /*\n  createNodeField({\n    markdownNode, name: \"images\",\n    value: images\n  });*/\n  return markdownNode;\n};\n"],"file":"gatsby-node.js"}